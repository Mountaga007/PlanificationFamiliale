# Utilise l'image officielle PHP 8.2 avec Apache comme serveur web
FROM php:8.2-apache

# Définit le répertoire de travail à /var/www/html dans le conteneur
WORKDIR /var/www/html

# Copie tous les fichiers du contexte de build (le répertoire local) dans le répertoire de travail du conteneur
COPY . .

# Ajoute la configuration "ServerName localhost" à la fin du fichier de configuration Apache
RUN echo "ServerName localhost" >> /etc/apache2/apache2.conf

# Met à jour les packages, installe certains outils et dépendances nécessaires
RUN apt-get update \
    && apt-get install -qq -y --no-install-recommends \
    cron \
    vim \
    locales coreutils apt-utils git libicu-dev g++ libpng-dev libxml2-dev libzip-dev libonig-dev libxslt-dev;

# Configure et génère les locales pour le support multilingue
RUN echo "en_US.UTF-8 UTF-8" > /etc/locale.gen && \
    echo "fr_FR.UTF-8 UTF-8" >> /etc/locale.gen && \
    locale-gen

# Télécharge et installe Composer
RUN curl -sSk https://getcomposer.org/installer | php -- --disable-tls && \
    mv composer.phar /usr/local/bin/composer

# Configure et installe plusieurs extensions PHP et active le module Apache 'rewrite'
RUN docker-php-ext-configure intl
RUN docker-php-ext-install pdo pdo_mysql mysqli gd opcache intl zip calendar dom mbstring zip gd xsl && a2enmod rewrite

# Installe l'extension APCu pour le cache PHP
RUN pecl install apcu && docker-php-ext-enable apcu

# Ajoute l'utilitaire pour installer facilement des extensions PHP
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/

# Rend l'utilitaire exécutable
RUN chmod +x /usr/local/bin/install-php-extensions && sync && \
    install-php-extensions amqp